/*Flight Center Latest Colors*/
/* Yellow Color */
/* Brown Color */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
* {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
  min-width: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
  text-decoration: none !important; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: 500; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none !important; }

/* ==========================================================================
   #RESET
   ========================================================================== */
/**
 * A very simple reset that sits on top of Normalize.css.
 */
body,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, dd, ol, ul,
figure,
hr,
fieldset, legend {
  margin: 0;
  padding: 0; }

/**
 * Remove trailing margins from nested lists.
 */
li > ol,
li > ul {
  margin-bottom: 0; }

/**
 * Remove default table spacing.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * 1. Reset Chrome and Firefox behaviour which sets a `min-width: min-content;`
 *    on fieldsets.
 */
fieldset {
  min-width: 0;
  /* [1] */
  border: 0; }

:focus {
  outline: none; }

a {
  text-decoration: none; }

.u-hidden-visually {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  -webkit-clip-path: inset(50%) !important;
          clip-path: inset(50%) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important; }

/* ==========================================================================
   #BOX-SIZING
   ========================================================================== */
body, html {
  min-height: 100%; }

/**
 * More sensible default box-sizing:
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 */
html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-family: "Roboto", sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased; }

*, *:before, *:after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

body {
  color: #141414;
  background: #fff;
  font-size: 16px;
  line-height: 1.4;
  overflow-y: scroll; }

/* ==========================================================================
   #SHARED
   ========================================================================== */
/**
 * Shared declarations for certain elements.
 */
/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
address,
h1, h2, h3, h4, h5, h6,
blockquote, p, pre,
dl, ol, ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 24px; }

/**
 * Consistent indentation for lists.
 */
dd, ol {
  margin-left: 24px; }

ul {
  margin: 0;
  list-style-type: none; }

input::-webkit-input-placeholder {
  opacity: 0.5; }

input::-moz-placeholder {
  opacity: 0.5; }

input:-ms-input-placeholder {
  opacity: 0.5; }

input::-ms-input-placeholder {
  opacity: 0.5; }

input::placeholder {
  opacity: 0.5; }

/**
 * Undo the red box-shadow glow added by Firefox on invalid inputs.
 * See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-ui-invalid
 */
input:-moz-ui-invalid {
  box-shadow: none; }

input[type=text]::-ms-clear {
  display: none; }

a svg,
button svg,
label svg {
  pointer-events: none; }

a {
  text-decoration: none; }

main {
  position: relative; }

/*
 *  custom scroll
 */
.custom-scroll::-webkit-scrollbar-track {
  background-color: #E2E4EB; }

.custom-scroll::-webkit-scrollbar {
  width: 5px;
  background-color: #babac0; }

.custom-scroll::-webkit-scrollbar-thumb {
  background-color: #828282;
  border: none;
  border-radius: 0; }

.oh {
  overflow: hidden; }

.btn-container {
  margin: 24px 0; }

.btn {
  font-size: 16px;
  font-size: 1rem;
  line-height: inherit;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  border-radius: 50px;
  padding: 12px 24px;
  border: none;
  font-weight: 500;
  cursor: pointer;
  text-transform: capitalize;
  margin-right: 16px; }
  .btn--orange {
    background: -webkit-gradient(linear, left top, left bottom, from(#FF4400), to(#FF7600));
    background: linear-gradient(180deg, #FF4400, #FF7600);
    color: white; }
  .btn--blue {
    background: -webkit-gradient(linear, left top, left bottom, from(#036498), to(#1695D8));
    background: linear-gradient(180deg, #036498, #1695D8);
    color: white; }
  .btn--light-blue {
    background: linear-gradient(120deg, #3f4fa5, #453593);
    color: white; }
  .btn--o-orange {
    border: 2px solid #FF4400;
    color: #FF4400; }
  .btn--o-blue {
    border: 2px solid #036498;
    color: #036498; }
  .btn--o-light-blue {
    border: 2px solid #3f4fa5;
    color: #3f4fa5; }
  .btn:hover {
    -webkit-box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.6);
            box-shadow: 0 0 4px 0 rgba(0, 0, 0, 0.6); }

.c-global-header {
  top: 0;
  display: block;
  width: 100%;
  height: 80px;
  padding: 15px;
  background: transparent;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  pointer-events: all;
  z-index: 100; }
  .c-global-header .brand-container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    font-size: 24px;
    font-size: 1.5rem;
    line-height: inherit;
    font-weight: 500; }
    .c-global-header .brand-container .brand {
      margin-left: 24px; }
      .c-global-header .brand-container .brand span:first-child {
        color: #3f4fa5; }
    .c-global-header .brand-container .logo {
      height: 46px;
      width: 46px; }

.container-fluid {
  width: 100%;
  padding: 15px; }

.container {
  padding: 0 15px;
  width: 100%;
  margin: auto;
  position: relative; }
  @media (min-width: 1024px) {
    .container {
      max-width: 1366px; } }
  @media (min-width: 1200px) {
    .container {
      max-width: 1366px; } }

section {
  margin-bottom: 50px; }

.section-title {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: inherit;
  font-weight: 500;
  margin-bottom: 30px;
  color: #3f4fa5; }

.section-des {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: inherit;
  font-weight: 400;
  margin-bottom: 30px; }

.masonry {
  /* Masonry container */
  -webkit-column-count: 4;
  -moz-column-count: 4;
  column-count: 4;
  -webkit-column-gap: 1em;
  -moz-column-gap: 1em;
  column-gap: 1em;
  padding: 0;
  -moz-column-gap: 0em;
  -webkit-column-gap: 0em;
  column-gap: 0;
  font-size: .85em; }
  @media (min-width: 300px) {
    .masonry .masonry {
      -moz-column-count: 1;
      -webkit-column-count: 1;
      column-count: 1; } }
  @media (min-width: 768px) {
    .masonry {
      -moz-column-count: 2;
      -webkit-column-count: 2;
      column-count: 2; } }
  @media (min-width: 1024px) {
    .masonry {
      -moz-column-count: 3;
      -webkit-column-count: 3;
      column-count: 3; } }
  @media (min-width: 1200px) {
    .masonry {
      -moz-column-count: 4;
      -webkit-column-count: 4;
      column-count: 4; } }

.item {
  display: inline-block;
  background: #fff;
  width: 100%;
  -webkit-transition: 1s ease all;
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  overflow: hidden;
  -o-object-fit: cover;
     object-fit: cover;
  text-align: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center; }

.item img {
  max-width: 100%;
  -o-object-fit: contain;
     object-fit: contain; }

@media only screen and (max-width: 320px) {
  .masonry {
    -moz-column-count: 1;
    -webkit-column-count: 1;
    column-count: 1; } }

@media only screen and (min-width: 321px) and (max-width: 768px) {
  .masonry {
    -moz-column-count: 2;
    -webkit-column-count: 2;
    column-count: 2; } }

@media only screen and (min-width: 769px) and (max-width: 1200px) {
  .masonry {
    -moz-column-count: 3;
    -webkit-column-count: 3;
    column-count: 3; } }

@media only screen and (min-width: 1201px) {
  .masonry {
    -moz-column-count: 4;
    -webkit-column-count: 4;
    column-count: 4; } }

.intro {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  justify-items: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: left;
  position: relative; }
  @media (min-width: 300px) {
    .intro {
      height: 500px; } }
  @media (min-width: 568px) {
    .intro {
      height: 600px; } }
  @media (min-width: 768px) {
    .intro {
      height: 600px; } }
  @media (min-width: 568px) {
    .intro {
      height: 700px; } }
  @media (min-width: 978px) {
    .intro {
      height: 500px; } }
  @media (min-width: 1024px) {
    .intro {
      height: 500px; } }
  @media (min-width: 1200px) {
    .intro {
      height: 800px; } }
  .intro .intro__content {
    min-height: 50px; }
    .intro .intro__content .calling {
      width: 100%;
      font-weight: 300;
      font-size: 48px;
      font-size: 3rem;
      line-height: inherit; }
    .intro .intro__content .name {
      width: 100%;
      font-weight: 500; }
      @media (min-width: 300px) {
        .intro .intro__content .name {
          font-size: 46px;
          font-size: 2.875rem;
          line-height: inherit; } }
      @media (min-width: 568px) {
        .intro .intro__content .name {
          font-size: 66px;
          font-size: 4.125rem;
          line-height: inherit; } }
      @media (min-width: 768px) {
        .intro .intro__content .name {
          font-size: 86px;
          font-size: 5.375rem;
          line-height: inherit; } }
      @media (min-width: 568px) {
        .intro .intro__content .name {
          font-size: 86px;
          font-size: 5.375rem;
          line-height: inherit; } }
      @media (min-width: 978px) {
        .intro .intro__content .name {
          font-size: 86px;
          font-size: 5.375rem;
          line-height: inherit; } }
      @media (min-width: 1024px) {
        .intro .intro__content .name {
          font-size: 86px;
          font-size: 5.375rem;
          line-height: inherit; } }
      @media (min-width: 1200px) {
        .intro .intro__content .name {
          font-size: 86px;
          font-size: 5.375rem;
          line-height: inherit; } }
    .intro .intro__content .des {
      width: 100%;
      font-weight: 400;
      font-size: 18px;
      font-size: 1.125rem;
      line-height: inherit; }
    .intro .intro__content .link-icons {
      height: 30px;
      width: 30px;
      margin-right: 30px;
      display: -webkit-inline-box;
      display: -ms-inline-flexbox;
      display: inline-flex;
      -webkit-box-align: center;
          -ms-flex-align: center;
              align-items: center;
      cursor: pointer; }
      .intro .intro__content .link-icons .link-icon {
        height: 40px;
        width: 40px;
        color: black; }
      .intro .intro__content .link-icons:hover {
        color: #3f4fa5; }
  .intro .abstract-item--01 {
    position: fixed;
    left: 0;
    z-index: -1;
    top: 0;
    max-width: 100%; }
  .intro .abstract-item--02 {
    position: absolute;
    right: -150px;
    top: -350px;
    opacity: 0.8;
    z-index: 1; }
    @media (min-width: 300px) {
      .intro .abstract-item--02 {
        display: none; } }
    @media (min-width: 568px) {
      .intro .abstract-item--02 {
        display: block;
        width: 500px;
        height: 500px; } }
    @media (min-width: 978px) {
      .intro .abstract-item--02 {
        display: block;
        width: 500px;
        height: 500px; } }
    @media (min-width: 1024px) {
      .intro .abstract-item--02 {
        display: block;
        width: 500px;
        height: 500px; } }
    @media (min-width: 1200px) {
      .intro .abstract-item--02 {
        display: block;
        width: 950px;
        height: 950px; } }
  .intro .vector1 {
    position: absolute;
    bottom: 0;
    width: 100%;
    z-index: 30; }

.recent {
  margin-bottom: 100px; }

.footer {
  background: linear-gradient(120deg, #000000, #0F0F0F);
  padding: 50px 15px; }
  .footer .footer-content {
    display: grid;
    grid-gap: 16px;
    color: white; }
    @media (min-width: 300px) {
      .footer .footer-content {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr 1fr; } }
    @media (min-width: 568px) {
      .footer .footer-content {
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr; } }
    @media (min-width: 768px) {
      .footer .footer-content {
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr; } }
    @media (min-width: 568px) {
      .footer .footer-content {
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr; } }
    @media (min-width: 978px) {
      .footer .footer-content {
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr; } }
    @media (min-width: 1024px) {
      .footer .footer-content {
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr; } }
    @media (min-width: 1200px) {
      .footer .footer-content {
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr; } }
    .footer .footer-content__title {
      font-size: 24px;
      font-size: 1.5rem;
      line-height: inherit;
      margin-bottom: 24px; }
    .footer .footer-content__link {
      font-size: 16px;
      font-size: 1rem;
      line-height: inherit;
      font-weight: 300; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
